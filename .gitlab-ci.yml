stages:
  - lint
  - build
  - test
  - deploy dev
  - depploy prod

image: ondrejsika/ci

variables:
  GIT_CLEAN_FLAGS: -ffdx -e node_modules
  IMAGE: $CI_REGISTRY_IMAGE
  DOCKER_BUILDKIT: 1

.prettier:
  stage: lint
  image: node
  script:
    - yarn
    - yarn prettier-check

.editorconfig:
  stage: lint
  image: mstruebing/editorconfig-checker
  script:
    - /ec

.build:
  stage: build
  script:
    - docker login $CI_REGISTRY -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD
    - docker build -t $IMAGE .
    - docker push $IMAGE

.build js:
  stage: build
  image: node
  script:
    - yarn
    - yarn static
  artifacts:
    paths:
      - out

.test:
  stage: test
  script:
    - docker run --name $CI_JOB_ID -d $IMAGE
    - docker run --rm --link $CI_JOB_ID:app ondrejsika/curl -isS http://app
  after_script:
    - docker rm -f $CI_JOB_ID
  dependencies: []

deploy dev:
  stage: deploy dev
  variables:
    DOCKER_HOST: $DOCKER_HOST_SERVER
  script:
    - docker rm -f $CI_COMMIT_REF_SLUG || true
    - docker run --name $CI_COMMIT_REF_SLUG --net traefik -l traefik.frontend.rule=Host:$CI_PROJECT_PATH_SLUG-$CI_COMMIT_REF_SLUG.$DEV_URL -l traefik.enable=true -d $IMAGE
